def productExceptSelf(nums):	
	length = len(nums)
    L,R,result = [1]*length, [1]*length, [1]*length
    
    # Computing all the product to the left of an element
    L[0] = 1
    for i in range(1,length,1):
        L[i] = nums[i - 1] * L[i -1]
        
    # Computing all the product to the right of an element
    R[length - 1] = 1
    for i in reversed(range(length - 1)):
        R[i] = nums[i+1] * R[i+1]
    
    # Computing the answer
    for i in range(length):
        result[i] = L[i] * R[i]
    
    return result